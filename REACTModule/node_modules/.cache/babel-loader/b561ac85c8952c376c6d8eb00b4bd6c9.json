{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/projects/REACTDemoService/REACTModule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/user/projects/REACTDemoService/REACTModule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/user/projects/REACTDemoService/REACTModule/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Container,Box}from\"@material-ui/core\";import{DataGrid}from\"@material-ui/data-grid\";import{getTableData,getTableCount}from\"api\";import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{field:\"CategoryName\",headerName:\"CategoryName\",width:250},{field:\"Description\",headerName:\"Description\",flex:1},{field:\"Picture\",headerName:\"Picture-desu\",flex:1}];var PAGE_SIZE=15;export default function MasterPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];// Number of rows which exist on the service\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),rowCount=_useState6[0],setRowCount=_useState6[1];var loadData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(isFirstLoad){var skip,count,_items,itemsWithIds,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:skip=_args.length>1&&_args[1]!==undefined?_args[1]:0;_context.prev=1;setItems([]);setLoading(true);if(!isFirstLoad){_context.next=9;break;}_context.next=7;return getTableCount();case 7:count=_context.sent;setRowCount(count);case 9:_context.next=11;return getTableData({$top:PAGE_SIZE,$skip:skip});case 11:_items=_context.sent;itemsWithIds=_items.map(function(item,index){item.id=index;return item;});setItems(itemsWithIds);case 14:_context.prev=14;setLoading(false);return _context.finish(14);case 17:case\"end\":return _context.stop();}}},_callee,null,[[1,,14,17]]);}));return function loadData(_x){return _ref.apply(this,arguments);};}();var handlePageChanged=function handlePageChanged(_ref2){var page=_ref2.page;loadData(false,page*PAGE_SIZE);};useEffect(function(){// when component mounted\nloadData(true);},[]);return/*#__PURE__*/_jsx(Container,{disableGutters:true,children:/*#__PURE__*/_jsx(Box,{height:\"80vh\",py:5,children:/*#__PURE__*/_jsx(DataGrid,{loading:loading,rows:items,columns:columns,pageSize:PAGE_SIZE,paginationMode:\"server\",rowCount:rowCount,onPageChange:handlePageChanged})})});}","map":{"version":3,"sources":["/home/user/projects/REACTDemoService/REACTModule/src/pages/MasterPage.js"],"names":["React","useEffect","useState","Container","Box","DataGrid","getTableData","getTableCount","columns","field","headerName","width","flex","PAGE_SIZE","MasterPage","items","setItems","loading","setLoading","rowCount","setRowCount","loadData","isFirstLoad","skip","count","$top","$skip","_items","itemsWithIds","map","item","index","id","handlePageChanged","page"],"mappings":"kfAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,GAApB,KAA+B,mBAA/B,CACA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,KAA5C,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CAAEC,KAAK,CAAE,cAAT,CAAyBC,UAAU,CAAE,cAArC,CAAqDC,KAAK,CAAE,GAA5D,CADc,CAEd,CAAEF,KAAK,CAAE,aAAT,CAAwBC,UAAU,CAAE,aAApC,CAAmDE,IAAI,CAAE,CAAzD,CAFc,CAGd,CAAEH,KAAK,CAAE,SAAT,CAAoBC,UAAU,CAAE,cAAhC,CAAgDE,IAAI,CAAE,CAAtD,CAHc,CAAhB,CAMA,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,CACnC,cAA0BZ,QAAQ,CAAC,EAAD,CAAlC,wCAAOa,KAAP,eAAcC,QAAd,eACA,eAA8Bd,QAAQ,CAAC,KAAD,CAAtC,yCAAOe,OAAP,eAAgBC,UAAhB,eAEA;AACA,eAAgChB,QAAQ,CAAC,CAAD,CAAxC,yCAAOiB,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,WAAP,qKAAoBC,IAApB,+CAA2B,CAA3B,iBAEbP,QAAQ,CAAC,EAAD,CAAR,CACAE,UAAU,CAAC,IAAD,CAAV,CAHa,IAKTI,WALS,+CAMSf,CAAAA,aAAa,EANtB,QAMLiB,KANK,eAOXJ,WAAW,CAACI,KAAD,CAAX,CAPW,8BAUQlB,CAAAA,YAAY,CAAC,CAChCmB,IAAI,CAAEZ,SAD0B,CAEhCa,KAAK,CAAEH,IAFyB,CAAD,CAVpB,SAUPI,MAVO,eAcPC,YAdO,CAcQD,MAAM,CAACE,GAAP,CAAW,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC/CD,IAAI,CAACE,EAAL,CAAUD,KAAV,CACA,MAAOD,CAAAA,IAAP,CACD,CAHoB,CAdR,CAkBbd,QAAQ,CAACY,YAAD,CAAR,CAlBa,yBAoBbV,UAAU,CAAC,KAAD,CAAV,CApBa,oGAAH,kBAARG,CAAAA,QAAQ,4CAAd,CAwBA,GAAMY,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAAc,IAAXC,CAAAA,IAAW,OAAXA,IAAW,CACtCb,QAAQ,CAAC,KAAD,CAAQa,IAAI,CAAGrB,SAAf,CAAR,CACD,CAFD,CAIAZ,SAAS,CAAC,UAAM,CACd;AACAoB,QAAQ,CAAC,IAAD,CAAR,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,KAAC,SAAD,EAAW,cAAc,KAAzB,uBACE,KAAC,GAAD,EAAK,MAAM,CAAC,MAAZ,CAAmB,EAAE,CAAE,CAAvB,uBACE,KAAC,QAAD,EACE,OAAO,CAAEJ,OADX,CAEE,IAAI,CAAEF,KAFR,CAGE,OAAO,CAAEP,OAHX,CAIE,QAAQ,CAAEK,SAJZ,CAKE,cAAc,CAAC,QALjB,CAME,QAAQ,CAAEM,QANZ,CAOE,YAAY,CAAEc,iBAPhB,EADF,EADF,EADF,CAeD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Box } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { getTableData, getTableCount } from \"api\";\n\nconst columns = [\n  { field: \"CategoryName\", headerName: \"CategoryName\", width: 250 },\n  { field: \"Description\", headerName: \"Description\", flex: 1 },\n  { field: \"Picture\", headerName: \"Picture-desu\", flex: 1 }\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Number of rows which exist on the service\n  const [rowCount, setRowCount] = useState(0);\n\n  const loadData = async (isFirstLoad, skip = 0) => {\n    try {\n      setItems([]);\n      setLoading(true);\n\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index;\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = ({ page }) => {\n    loadData(false, page * PAGE_SIZE);\n  };\n\n  useEffect(() => {\n    // when component mounted\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n        />\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}