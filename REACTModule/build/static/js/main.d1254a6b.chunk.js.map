{"version":3,"sources":["assets/logo.svg","components/AppBar.js","api/index.js","pages/MasterPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginLeft","AppMainBar","classes","AppBar","position","Toolbar","width","src","logoIcon","alt","Typography","variant","className","instance","axios","create","baseURL","getTableData","a","params","$top","$skip","get","data","d","results","value","getTableCount","columns","field","headerName","flex","MasterPage","useState","items","setItems","loading","setLoading","rowCount","setRowCount","loadData","isFirstLoad","skip","count","_items","itemsWithIds","map","item","index","id","useEffect","Container","disableGutters","Box","height","py","rows","pageSize","paginationMode","onPageChange","page","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,MAA0B,iCCKnCA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLC,WAAYP,EAAMK,QAAQ,QAIf,SAASG,IACtB,IAAMC,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,qBAAKC,MAAO,GAAIC,IAAKC,EAAUC,IAAI,SACnC,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWV,EAAQH,MAA5C,SACG,qB,+DCrBLc,E,OAAWC,EAAMC,OAAO,CAC5BC,QAHc,6CAMHC,EAAY,uCAAG,8CAAAC,EAAA,6DAAOC,EAAP,+BAAgB,CAAEC,KAAM,IAAKC,MAAO,GAApC,SACHR,EAASS,IAAI,cAAe,CACjDH,WAFwB,uBAClBI,EADkB,EAClBA,KADkB,mBAKnB,UAAAA,EAAKC,SAAL,eAAQC,UAAWF,EAAKC,GAAKD,EAAKG,OALf,2CAAH,qDAQZC,EAAa,uCAAG,8BAAAT,EAAA,sEACJL,EAASS,IAAI,sBADT,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDCXpBK,EAAU,CACd,CAAEC,MAAO,eAAgBC,WAAY,eAAgBxB,MAAO,KAC5D,CAAEuB,MAAO,cAAeC,WAAY,cAAeC,KAAM,GACzD,CAAEF,MAAO,UAAWC,WAAY,UAAWC,KAAM,IAKpC,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,iCAAAvB,EAAA,yDAAoBwB,EAApB,+BAA2B,EAA3B,SAEbP,EAAS,IACTE,GAAW,IAEPI,EALS,gCAMSd,IANT,OAMLgB,EANK,OAOXJ,EAAYI,GAPD,wBAUQ1B,EAAa,CAChCG,KApBU,GAqBVC,MAAOqB,IAZI,QAUPE,EAVO,OAcPC,EAAeD,EAAOE,KAAI,SAACC,EAAMC,GAErC,OADAD,EAAKE,GAAKD,EACHD,KAETZ,EAASU,GAlBI,yBAoBbR,GAAW,GApBE,2EAAH,sDAiCd,OALAa,qBAAU,WAERV,GAAS,KACR,IAGD,cAACW,EAAA,EAAD,CAAWC,gBAAc,EAAzB,SACE,cAACC,EAAA,EAAD,CAAKC,OAAO,OAAOC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEnB,QAASA,EACToB,KAAMtB,EACNN,QAASA,EACT6B,SAjDQ,GAkDRC,eAAe,SACfpB,SAAUA,EACVqB,aAnBkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3BpB,GAAS,EAlCK,GAkCEoB,UCvCpB,IASeC,EATH,WACV,OACE,sBAAKjD,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAACoB,EAAD,QCES8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1254a6b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.400ad79a.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport logoIcon from \"assets/logo.svg\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nexport default function AppMainBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <img width={40} src={logoIcon} alt=\"Logo\" />\n        <Typography variant=\"h4\" className={classes.title}>\n          {\"REACTModule\"}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import axios from \"axios\";\n\nconst baseURL = \"northwind_api/V3/Northwind/Northwind.svc\";\n\nconst instance = axios.create({\n  baseURL\n});\n\nexport const getTableData = async (params = { $top: 100, $skip: 0 }) => {\n  const { data } = await instance.get(\"/Categories\", {\n    params\n  });\n\n  return data.d?.results || data.d || data.value;\n};\n\nexport const getTableCount = async () => {\n  const { data } = await instance.get(\"/Categories/$count\");\n  return data;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Box } from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { getTableData, getTableCount } from \"api\";\n\nconst columns = [\n  { field: \"CategoryName\", headerName: \"CategoryName\", width: 250 },\n  { field: \"Description\", headerName: \"Description\", flex: 1 },\n  { field: \"Picture\", headerName: \"Picture\", flex: 1 }\n];\n\nconst PAGE_SIZE = 15;\n\nexport default function MasterPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Number of rows which exist on the service\n  const [rowCount, setRowCount] = useState(0);\n\n  const loadData = async (isFirstLoad, skip = 0) => {\n    try {\n      setItems([]);\n      setLoading(true);\n\n      if (isFirstLoad) {\n        const count = await getTableCount();\n        setRowCount(count);\n      }\n\n      const _items = await getTableData({\n        $top: PAGE_SIZE,\n        $skip: skip\n      });\n      const itemsWithIds = _items.map((item, index) => {\n        item.id = index;\n        return item;\n      });\n      setItems(itemsWithIds);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChanged = ({ page }) => {\n    loadData(false, page * PAGE_SIZE);\n  };\n\n  useEffect(() => {\n    // when component mounted\n    loadData(true);\n  }, []);\n\n  return (\n    <Container disableGutters>\n      <Box height=\"80vh\" py={5}>\n        <DataGrid\n          loading={loading}\n          rows={items}\n          columns={columns}\n          pageSize={PAGE_SIZE}\n          paginationMode=\"server\"\n          rowCount={rowCount}\n          onPageChange={handlePageChanged}\n        />\n      </Box>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport NotFound from \"pages/NotFound\";\nimport AppBar from \"components/AppBar\";\nimport MasterPage from \"pages/MasterPage\";\n\nconst App = () => {\n  return (\n    <div className=\"App full-height\">\n      <AppBar />\n      <MasterPage />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}